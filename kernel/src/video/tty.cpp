
#include <stdarg.h>
#include <zetaos/zetalib.h>
#include <zetaos/video/tty.h>
#include <zetaos/serial/serial.h>

Framebuffer* framebuffer;
PSF1_FONT* psf1_font;
Point CursorPosition;
char tbuf[32];
char bchars[] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};


void Clear(){
    uint64_t FBBase = (uint64_t)framebuffer->BaseAddress;
    uint64_t BytesPerScanline = framebuffer->PixelsPerScanLine * 4;
    uint64_t FBHeight = framebuffer->Height;
    uint64_t FBSize = framebuffer->BufferSize;

    for (int VerticalScanline = 0; VerticalScanline < FBHeight; VerticalScanline ++){
        uint64_t PixelPtrBase = FBBase + (BytesPerScanline * VerticalScanline);
        for (uint32_t* PixelPtr = (uint32_t*)PixelPtrBase; PixelPtr < (uint32_t*)(PixelPtrBase + BytesPerScanline); PixelPtr ++){
            *PixelPtr = 0x000000;
        }
    }
}


void putChar(unsigned int colour, char chr, unsigned int xOff, unsigned int yOff)
{
    unsigned int* pixPtr = (unsigned int*)framebuffer->BaseAddress;
    char* fontPtr = psf1_font->glyphBuffer + (chr * psf1_font->psf1_Header->charsize);
    for (unsigned long y = yOff; y < yOff + 14; y++){
        for (unsigned long x = xOff; x < xOff+8; x++){
            if ((*fontPtr & (0b10000000 >> (x - xOff))) > 0){
                    *(unsigned int*)(pixPtr + x + (y * framebuffer->PixelsPerScanLine)) = colour;
                }

        }
        fontPtr++;
    }
}
void lol(){
    Print(0xFFFAAA, "\n********/#@&#((((((((((##%&@@@@@@@@&&@@@@&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@&&%%%#####((/***,,,,,,,,,,,,,,,,,*,,,**/%&@@@@@");
Print(0xFFFAAA, "\n*********(@&#(((#&@@@@@@@@@@&@@@@@&&&&&&&&&&&&%&&&&&&&@@@@@&%%##(((((((//**,,,....,,,,,,,,,,,,,........,,,,,,,,,/&&&&&&");
Print(0xFFFAAA, "\n********/#@@@@@&&&@@@@@@@@&&&&&&&&&&&&&&&&&@@@@@@&%#(/*,,,,.,,..,,.,,,,,,,,,........,,,,,,..................,.,,,,(@&&&");
Print(0xFFFAAA, "\n****/(&@@&%@@@@&&&&&&&&&&&&&&&&&&&&@@@@&&#(/*,.................,,,,,,,,,,...........,,,,,,,..................,,,,,/@@&");
Print(0xFFFAAA, "\n**(%@@&@@@@&&&&&&&&&&%&&&&&&@@@@%(/((*,,,,....................,,,,,,,,,,,,..............,,,,,,,................,,,,,(@@");
Print(0xFFFAAA, "\n@@@@@@&&&&&&&&&%&&&&@@@&(*,,,,,,.,,,,,,,,....................,..,,,,,,,,,,,..............,,,,,,,,................,/**&@");
Print(0xFFFAAA, "\n@@&&&&&&&&&&&&@@@%(*,,,.,..............,,......................,,,,,,,,,**,,............,,,,,,,,,,,..............,,*/*/");
Print(0xFFFAAA, "\n&&&&&&@@@@@&%(/,,,,,,,,,.............,,,,.....................,,,,,,,*,,,**,,,........,,,,,***,,,,,,,,..........,,,,#(,");
Print(0xFFFAAA, "\n&@@@@@@%(/*,....,.,.,.,.............,,,,, ...................,,,,,,,,,/,,,***,,,,....,,,,,,,****,,,,,,,,,........,,,,%#");
Print(0xFFFAAA, "\n%#(/,,............................,,,,,,,,..............,...,,,,,,,,,****,,,******,,,,,,,,********,,,,,,,,,,,,,..,,,,*#");
Print(0xFFFAAA, "\n,,,,............................,,,,,,,,,,..............,,,,,,,,,,,*/(*,,*/*,*//****,,,,,,,*******/*,,,,,,,,,,,,,,,,,*%");
Print(0xFFFAAA, "\n,,,...........................,,,,,,,,,,,,,.............,,,,,,,,,,*((/,,*,,*/(////(#(***************//*,,,,,,,,,,,,,,,(");
Print(0xFFFAAA, "\n,,,.........................,,,,,,,,,,,,,,,.............,,****,,,*((/*,,,,,,,,,,**(#(***/(#%##(//******/*,,,,,,,,,,,,,*");
Print(0xFFFAAA, "\n,,,..............,,,,,,,,,,,,,,,,,,,,/,,,,,,,,.........,,,****,,*(//*,,,,,,,,,,,,,,,,*,,,,**,**#***,,,,,,,***,,,,,,,,,*");
Print(0xFFFAAA, "\n,,,............,,,,,,,,,,,,,,,,,,//#(//,,/(/,,,........,,**/***(/(/*,,,,,,,,,,,,,**,,,,,,*,,,,,*(,,,,,,,,,,,,,,,,,,,,,*");
Print(0xFFFAAA, "\n*/,,..........,,,,,,,,,,,,,****(%#*,**/*,/((/,,,,,,,,,,,,**/*/%(#,**,,,,,,,,,,,,,,,,,,,,,,,*****(/,,,,,,,,,,,,,,,,,,,,*");
Print(0xFFFAAA, "\n/,,,......,,,,,,,,,,,,**/**/#/**,*,,,,,//*//#*,,,,,,,,,,,**(#(*,,,,,,,,,,,,,,,,,****////*,,,***,/(,,,,,..,...,,,,,,,,,*");
Print(0xFFFAAA, "\n*,,,,,,,,,,,,,,,,**/////(/*****,,,,,,,,,*((*/#/,,,,,,,,,,**#%*,,,,,,,,****//((/*******,**,,****,*(,,,,,..,,,.,,,,,,,,,,");
Print(0xFFFAAA, "\n*,,,,,,,,,,,**********///*,**,,,,,,,,,,,,*/#**#/,,**,,,,,,,(%*,*,,,,*/*,,,,***,,**,**************%/,,,,...,..,,,,,,,,,,");
Print(0xFFFAAA, "\n*,,,,,,,,,,,,,,,,,,**,,,*(#%#*,,,,,,,,,,,,,*((//#****,,,,,,,(#*,******,*******************//((#(/%/,,,,,,,,,,,,,,,,,,,,");
Print(0xFFFAAA, "\n*,,,,,,,,,,,,,,.,,,,***(((((((((##((((((//*,**///(#/**,,,,,,,/%********/###%&&@@@@@@@@@@@@@&#%@/*%*,,,,,,,,,,,,,,,,,,,,");
Print(0xFFFAAA, "\n/,,,,,,,,,,,,,,,,,,*(*,******,,,*****,,,*******,***/#(******,,*&(******(#//@%#######&@*,,,..,&@//#*,,,,,,,,,,,,,,,,,,,,");
Print(0xFFFAAA, "\n**,,,,,,,,,,.....,,*(*,,,,***********/(#%&@@&%********(%#(/*****/(******, .%%(/////(&#      #@//(,,,,,,,,,,,,,,,,,,,,*/");
Print(0xFFFAAA, "\n*/,,,,,,,,,,.....,,,((*,,**//#%&@@@@@@&&&&@#..,**********/###(/***/(/***,. *&#/////(%,    .&@//(,,**,,,,,**,,,,,,,**/#*");
Print(0xFFFAAA, "\n**,,,,*,,,,,,...,.,,*%#@@@@%#/*,#@###(////(%*  ,*****,********///((((/((/**,/#(/*/**,,*/(%##*(/*/****,,,,**,,,,,**,,(*/");
Print(0xFFFAAA, "\n/,,,**,,,,,,,,,,,,,,,*%#@(,,,    /@#//////(%* .,*****,,,,,**************,******************(/*/(****,,,,,/*,**,,**,(***");
Print(0xFFFAAA, "\n**/**,,,,,,,,,,,,,,,,,*%(&&.      .#@%##/%%/*******************,*******,,,*********//((##(//(((*,,,,,******,*/,*,*//***");
Print(0xFFFAAA, "\n/***/,,,,,,,,,,,,,,,,***(#/%#.      ,*******,,*,*,*,,,,,*,,,**,,*,,,,,,,,,,,,*,,,,,,,,,,,,,,*#,,,,***(*****///(**,*/***");
Print(0xFFFAAA, "\n*****/,,,,,,,,,,,,,,,,,,,,*%(//(#/****/*****,,**,,,,,,,,,,,,,,,,,,,,,,,,....................,#*,,,**/(***////*****//((##");
Print(0xFFFAAA, "\n*****//,,,,,,,,,,,****,,,,,*/#(***/********,,,,,,,,,,,,,,,,,.......................,//,...,///,,,**/%/*/(/**************");
Print(0xFFFAAA, "\n****/*//**,,,,,**,,****/***,**/((***,,*#/,,,,,........................................,,*////#//**##/(/*****************");
Print(0xFFFAAA, "\n*******//***,,,**,,,,,**(#(****,,,,*//,,..................,,,,,,,,........................,,*#%/(//*********************");
Print(0xFFFAAA, "\n*********////*,,/*,,,,,,,,//**,,,,,,...........................,,........................,,,%%/*/,/*********************");
Print(0xFFFAAA, "\n*********//((/***//,,,,*//*,/#*,/#*,,,..................................................,,(%(/***///********************");
Print(0xFFFAAA, "\n******/((/*********/(/**,*/(*/,***##,,,,..........................,,,,,,..............,,(%(*******//(/******************");
Print(0xFFFAAA, "\n***********************//(/(%#(///**%&/,,,,,.............,/,,,........*((...........,#&#//***********//*****************");
Print(0xFFFAAA, "\n***************************((*********/%&#*,,,,,........,(/,....................*#@@@@@&(/******************************");
Print(0xFFFAAA, "\n************************//#/************//(#&&#/,,.,.......................,/%%#&@@@#((%#////***************************");
Print(0xFFFAAA, "\n**********************/(###%%%%&&&&%&&@@@@@@%&#(%(.*%%#(/(/*,........,*(%%(***/%@&#(((((%#/*/***************************");
Print(0xFFFAAA, "\n******************/(&&%&&&&&&&&&&&&&&&&&&&&@&((((((%@@@@@//((((####(//,,,,,,*#%#(((((((((%%#(%%%%###(/////**************");
Print(0xFFFAAA, "\n////************/%&&%&%&&&&&&&&&&&&&&&&&&&@%((((((((((#%%/****,,,***,,,,,,,,/#((((((((((((%@%(&@&&&&&&%#(//((//*********");
Print(0xFFFAAA, "\n///////*******/%&%%&&&%%&&&&&&&&&&&&&&&&&@%(((((((((((((((##/,,,,,,,,,,,,*#((((((((((((((((#&(@@&&&&&&&&&&&&&&%&@#/*****");
Print(0xFFFAAA, "\n///////******/&&%&&&&&&&&&&&&&&&&&&&&&&&@%((((((((((((((((((&#,,,,,,,,,/&%((((((((((((((((((%@@@&&&&&&&&&&&&&&&&&&@@&/**");
Print(0xFFFAAA, "\n///*********/%&%%&&&&&&&&&&&&&&&&&&&&&&@@(((((((((((((((((((#&#,,,,,/(#(#((((((((((((((((((#&@@&&&&&&&&&&&&&&&&&&&&&&@&(");
Print(0xFFFAAA, "\n************#&&%&&&&&&&&&&&&&&&&&&&&&&&@@&#((((((((((((((&##%&&&/,*(#(%%%%#(((((((((((((#&&&%@@&&&&&&&&%&&&&&&&&&&&&&&@@");
Print(0xFFFAAA, "\n***********/#@@&&&&&&&&&&&&&&&&&&&&&&&@@(/(%#(((((((((((#&@@@@&%&&#######%&##((((((#(#&@##(/%@&&&&&&&&&&&&&&&&&&&&&&&&&@");
}
void PutChar(char chr){
    putChar(0xFFFFFF, chr, CursorPosition.X, CursorPosition.Y);
    CursorPosition.X += 8;
    if (CursorPosition.X + 8 > framebuffer->Width){
        CursorPosition.X = 0; 
        CursorPosition.Y += 16;
    }
}
void PutPix(uint32_t x, uint32_t y, uint32_t colour){
    *(uint32_t*)((uint64_t)framebuffer->BaseAddress + (x*4) + (y * framebuffer->PixelsPerScanLine * 4)) = colour;
}
void Print(unsigned int colour, char* str)
{
    char *chr = str;
    serial_string(SERIAL_PORT_A, str);
    while(*chr != 0){
        if(*chr == 0x0A){
            chr++;
            CursorPosition.X = 1;
            CursorPosition.Y += 14;
        }
        else{
            putChar(colour, *chr, CursorPosition.X, CursorPosition.Y);
            CursorPosition.X+=8;
            if(CursorPosition.X + 8 > framebuffer->Width)
            {
                CursorPosition.X = 1;
                CursorPosition.Y += 14;
            }
           chr++;
        }
    }
}

void init_video(Framebuffer* fb, PSF1_FONT* fnt){
    serial_string(SERIAL_PORT_A, "[debug] void init_video(Framebuffer* fb, PSF1_FONT* fnt); called\n");
    CursorPosition.X = 1;
    CursorPosition.Y = 1;
    framebuffer = fb;
    psf1_font = fnt;
}

void ClearChar(){
    serial_string(SERIAL_PORT_A, "[debug] ClearChar(); called\n");
    if (CursorPosition.X == 0){
        CursorPosition.X = framebuffer->Width;
        CursorPosition.Y -= 16;
        if (CursorPosition.Y < 0) CursorPosition.Y = 0;
    }

    unsigned int xOff = CursorPosition.X;
    unsigned int yOff = CursorPosition.Y;

    unsigned int* pixPtr = (unsigned int*)framebuffer->BaseAddress;
    for (unsigned long y = yOff; y < yOff + 16; y++){
        for (unsigned long x = xOff - 8; x < xOff; x++){
                    *(unsigned int*)(pixPtr + x + (y * framebuffer->PixelsPerScanLine)) = 0x000000;
        }
    }

    CursorPosition.X -= 8;

    if (CursorPosition.X < 0){
        CursorPosition.X = framebuffer->Width;
        CursorPosition.Y -= 16;
        if (CursorPosition.Y < 0) CursorPosition.Y = 0;
    }

}